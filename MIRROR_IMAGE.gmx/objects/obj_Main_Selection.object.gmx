<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rooms_wid = (room_width/2);
rooms_hei = (room_height/2);

zeSelectionsStuff = SelectionMenu.START;
zeSelectionListStr[SelectionMenu.EXIT] = "EXIT";
zeSelectionListStr[SelectionMenu.OPTION] = "OPTION"; 
zeSelectionListStr[SelectionMenu.START] = "START GAME";
FontSize = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_down))
{
    zeSelectionsStuff = min(zeSelectionsStuff+1,SelectionMenu.TOTAL_SELECTIONS-1);
}

if (keyboard_check_pressed(vk_up))
{
    zeSelectionsStuff = max(zeSelectionsStuff-1,0);
}

if (keyboard_check_pressed(vk_enter))
{
    switch (zeSelectionsStuff)
    {
    case SelectionMenu.START:
    room_goto_next();
    break;
    case SelectionMenu.OPTION:
    room_goto(rm_options_menu);
    break;
    case SelectionMenu.EXIT:
    game_end();
    break;
    default:
    break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
var theHeightOfArray = rooms_hei;
var num = 0;
repeat(SelectionMenu.TOTAL_SELECTIONS)
{
    draw_text_transformed_colour(rooms_wid, theHeightOfArray, zeSelectionListStr[num],FontSize,FontSize,0,c_lime,c_lime,c_lime,c_lime,1);
    theHeightOfArray += 60;
    ++num;
}
var zedefaultFontSize = font_get_size(fnt_default);
var offSet = 0.75;
var zeStrLength = offSet * (string_length(zeSelectionListStr[zeSelectionsStuff]) * FontSize * zedefaultFontSize * 0.5);
draw_sprite(spr_player,0,rooms_wid-zeStrLength, rooms_hei + (zeSelectionsStuff*60));
draw_sprite(spr_oPlayer,0,rooms_wid+zeStrLength, rooms_hei + (zeSelectionsStuff*60));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
